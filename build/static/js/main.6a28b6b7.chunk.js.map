{"version":3,"sources":["utils/class-names/index.js","utils/useInterval/index.js","pomodoro/BreakDuration.js","pomodoro/FocusDuration.js","pomodoro/PlayPauseStop.js","utils/duration/index.js","pomodoro/Pomodoro.js","App.js","index.js"],"names":["classNames","classNameToBoolean","Object","entries","reduce","classes","className","value","concat","undefined","filter","join","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","BreakDuration","minutesToDuration","increaseBreakTime","decreaseBreakTime","breakTime","data-testid","type","onClick","FocusDuration","focusTime","increaseFocusTime","decreaseFocusTime","PlayPauseStop","playPause","resetTimer","isTimerRunning","role","aria-label","title","oi","givenMinutes","minutes","Math","floor","toString","padStart","Pomodoro","useState","setIsTimerRunning","initialFocusTime","setInitialFocusTime","initialBreakTime","setInitialBreakTime","setFocusTime","setBreakTime","onPlay","setOnPlay","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","focusSession","setFocusSession","breakSession","setBreakSession","progressBar","setProgressBar","second","progress","percentage","sessionExpired","breakTimeExpired","focusTimeExpired","Audio","play","currentMinutes","currentSeconds","initialMinutes","prevState","style","display","givenSeconds","seconds","round","secondsToDuration","height","aria-valuemin","aria-valuemax","aria-valuenow","width","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a28b6b7.chunk.js","sourcesContent":["/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\r\n\r\nconst BreakDuration = ({\r\n  minutesToDuration,\r\n  increaseBreakTime,\r\n  decreaseBreakTime,\r\n  breakTime,\r\n}) => {\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"float-right\">\r\n        <div className=\"input-group input-group-lg mb-2\">\r\n          <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n            Break Duration: {minutesToDuration(breakTime)}\r\n          </span>\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"decrease-break\"\r\n              onClick={decreaseBreakTime}\r\n            >\r\n              <span className=\"oi oi-minus\" />\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"increase-break\"\r\n              onClick={increaseBreakTime}\r\n            >\r\n              <span className=\"oi oi-plus\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BreakDuration;\r\n","import React from \"react\";\r\n\r\nconst FocusDuration = ({\r\n  minutesToDuration,\r\n  focusTime,\r\n  increaseFocusTime,\r\n  decreaseFocusTime,\r\n}) => {\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"input-group input-group-lg mb-2\">\r\n        <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n          Focus Duration: {minutesToDuration(focusTime)}\r\n        </span>\r\n        <div className=\"input-group-append\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid=\"decrease-focus\"\r\n            onClick={decreaseFocusTime}\r\n          >\r\n            <span className=\"oi oi-minus\" />\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid=\"increase-focus\"\r\n            onClick={increaseFocusTime}\r\n          >\r\n            <span className=\"oi oi-plus\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FocusDuration;\r\n","import React from \"react\";\r\n\r\nconst PlayPauseStop = ({\r\n  playPause,\r\n  resetTimer,\r\n  classNames,\r\n  isTimerRunning,\r\n}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <div\r\n          className=\"btn-group btn-group-lg mb-2\"\r\n          role=\"group\"\r\n          aria-label=\"Timer controls\"\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            data-testid=\"play-pause\"\r\n            title=\"Start or pause timer\"\r\n            onClick={playPause}\r\n          >\r\n            <span\r\n              className={classNames({\r\n                oi: true,\r\n                \"oi-media-play\": !isTimerRunning,\r\n                \"oi-media-pause\": isTimerRunning,\r\n              })}\r\n            />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            title=\"Stop the session\"\r\n            onClick={resetTimer}\r\n          >\r\n            <span className=\"oi oi-media-stop\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayPauseStop;\r\n","/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React, { useState } from \"react\";\n\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport BreakDuration from \"./BreakDuration\";\nimport FocusDuration from \"./FocusDuration\";\nimport PlayPauseStop from \"./PlayPauseStop\";\n\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [initialFocusTime, setInitialFocusTime] = useState(25);\n  const [initialBreakTime, setInitialBreakTime] = useState(5);\n  const [focusTime, setFocusTime] = useState(25);\n  const [breakTime, setBreakTime] = useState(5);\n  const [onPlay, setOnPlay] = useState(true);\n  const [timerMinutes, setTimerMinutes] = useState(25);\n  const [timerSeconds, setTimerSeconds] = useState(0);\n  const [focusSession, setFocusSession] = useState(false);\n  const [breakSession, setBreakSession] = useState(false);\n  const [progressBar, setProgressBar] = useState(0);\n\n  const resetTimer = () => {\n    setOnPlay(true);\n    setIsTimerRunning(false);\n    setFocusTime(25);\n    setBreakTime(5);\n    setTimerMinutes(focusTime);\n    setTimerSeconds(0);\n    setBreakSession(false);\n    setFocusSession(false);\n    setInitialFocusTime(focusTime);\n    setInitialBreakTime(breakTime);\n    setProgressBar(0);\n  };\n\n  function playPause() {\n    if (onPlay) {\n      setInitialFocusTime(focusTime);\n      setInitialBreakTime(breakTime);\n      setTimerMinutes(focusTime);\n      setOnPlay(false);\n    }\n    setFocusSession(true);\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  // Use Interval Function ---------------------------------------\n  useInterval(\n    () => {\n      setTimerSeconds((second) => {\n        second === 0 ? (second = 59) : (second -= 1);\n        if (second === 59) setTimerMinutes(timerMinutes - 1);\n        return second;\n      });\n      if (breakSession)\n        setProgressBar(\n          (progress) =>\n            (progress = percentage(\n              timerMinutes,\n              timerSeconds,\n              initialBreakTime\n            ))\n        );\n      else\n        setProgressBar(\n          (progress) =>\n            (progress = percentage(\n              timerMinutes,\n              timerSeconds,\n              initialFocusTime\n            ))\n        );\n\n      if (timerMinutes === 0 && timerSeconds === 1) sessionExpired();\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  const sessionExpired = () => {\n    if (!breakSession) focusTimeExpired();\n    else breakTimeExpired();\n  };\n  const focusTimeExpired = () => {\n    new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/0116.mp3\").play();\n    setBreakSession(true);\n    setProgressBar(0);\n    setTimerSeconds(0);\n    setTimerMinutes(initialBreakTime);\n  };\n  const breakTimeExpired = () => {\n    new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/0116.mp3\").play();\n    setBreakSession(false);\n    setProgressBar(0);\n    setTimerSeconds(0);\n    setTimerMinutes(initialFocusTime);\n  };\n\n  // Increase and Decrease Focus Time Functions Sent as props tp <FocusDuration />\n\n  const increaseFocusTime = () => {\n    if (focusTime < 60 && !isTimerRunning && onPlay) {\n      setFocusTime((focusTime) => (focusTime += 5));\n    }\n  };\n\n  const decreaseFocusTime = () => {\n    if (focusTime > 5 && !isTimerRunning && onPlay) {\n      setFocusTime((focusTime) => (focusTime -= 5));\n    }\n  };\n  // ------------------------------------------------------------------------------ //\n\n  // Increase and Decrease Break Time Functions Sent as props tp <BreakDuration />\n\n  const increaseBreakTime = () => {\n    if (breakTime < 15 && !isTimerRunning && onPlay) {\n      setBreakTime((breakTime) => (breakTime += 1));\n    }\n  };\n\n  const decreaseBreakTime = () => {\n    if (breakTime > 1 && !isTimerRunning && onPlay) {\n      setBreakTime((breakTime) => (breakTime -= 1));\n    }\n  };\n  // ------------------------------------------------------------------------------ //\n\n  function percentage(currentMinutes, currentSeconds, initialMinutes) {\n    return (\n      100 -\n      ((currentMinutes * 60 + currentSeconds) / (initialMinutes * 60)) * 100\n    );\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <FocusDuration\n          minutesToDuration={minutesToDuration}\n          focusTime={focusTime}\n          increaseFocusTime={increaseFocusTime}\n          decreaseFocusTime={decreaseFocusTime}\n        />\n        <BreakDuration\n          minutesToDuration={minutesToDuration}\n          breakTime={breakTime}\n          increaseBreakTime={increaseBreakTime}\n          decreaseBreakTime={decreaseBreakTime}\n        />\n      </div>\n      <PlayPauseStop\n        playPause={playPause}\n        resetTimer={resetTimer}\n        classNames={classNames}\n        isTimerRunning={isTimerRunning}\n        useInterval={useInterval}\n      />\n      <div style={focusSession ? { display: \"block\" } : { display: \"none\" }}>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <h2 data-testid=\"session-title\">\n              {!breakSession ? \"Focusing\" : \"On Break\"} for{\" \"}\n              {!breakSession\n                ? minutesToDuration(initialFocusTime)\n                : minutesToDuration(initialBreakTime)}{\" \"}\n              minutes\n            </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(timerMinutes * 60 + timerSeconds)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={progressBar}\n                style={{ width: `${progressBar}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}